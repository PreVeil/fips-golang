name: CI
on:
  push:
    branches:
      - dev
  pull_request:

jobs:
  test:
    name: Unit tester

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Add fips-temp to PATH
      run: echo "::add-path::$(pwd)/fips-temp"

    # - uses: actions/checkout@v2
    #   with:
    #     repository: PreVeil/fips-crypto
    #     ref: refs/tags/release/latest
    #     token: ${{ secrets.PREVEIL_DEPLOY_USER_TOKEN }}
    #     path: ./fipscrypto

    # COMMIT_ID=$(git rev-list -n 1 release/latest)
    # echo "fips-commit-id:" $COMMIT_ID
    # aws s3 cp s3://pv-bin-storage/ci/fipscrypto_build_osx/$COMMIT_ID/libfips-crypto.so /usr/local/lib

    - name: Set up fips-crypto
      if: matrix.os == 'macos-latest'
      run: |
        rm -rf /usr/local/include/fips-crypto && mkdir /usr/local/include/fips-crypto
        cp $(pwd)/fips-temp/fips-crypto/fips-crypto.h /usr/local/include/fips-crypto
        cp $(pwd)/fips-temp/libfips-crypto.dylib /usr/local/lib
        ls -lah /usr/local/include/fips-crypto
        ls -lah /usr/local/lib/libfips-crypto.dylib

    - name: Set up fips-crypto
      if: matrix.os == 'ubuntu-latest'
      run: |
        rm -rf /usr/local/include/fips-crypto && sudo mkdir /usr/include/fips-crypto
        sudo cp $(pwd)/fips-temp/fips-crypto/fips-crypto.h /usr/include/fips-crypto
        sudo cp $(pwd)/fips-temp/libfips-crypto.so /usr/lib
        ls -lah /usr/include/fips-crypto
        ls -lah /usr/lib/libfips-crypto.so

    - name: Run unit tests
      run: FIPSDIR=$(pwd)/fips-temp make test
      shell: bash
